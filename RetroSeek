#!/usr/bin/env python3

# -------------------
# DEPENDENCIES
# -------------------

import os
import subprocess
import argparse
from pathlib import Path


# -----------------------------
# MAIN ENTRY POINT
# -----------------------------

if __name__ == '__main__':
    # -----------------------------
    # PARSE COMMAND-LINE ARGUMENTS
    # -----------------------------
    parser = argparse.ArgumentParser(
        description='RetroSeek: A tool for directed ERV detection and analysis.'
    )

    parser.add_argument(
        '--generate_global_plots', '-p',
        action='store_true',
        help='Generate plots from the analysis.'
    )

    parser.add_argument(
        '--generate_circle_plots', '-c',
        action='store_true',
        help='Generate circle plots from the species in analysis.'
    )

    parser.add_argument(
        '--hotspot_detection', '-d',
        action='store_true',
        help='Perform ERV hotspot detection.'
    )

    args = parser.parse_args()

    # -----------------------------
    # DEFINE SCRIPT EXECUTION PATH
    # -----------------------------
    script_dir = Path(__file__).resolve().parent / 'workflow'

    # -----------------------------
    # EXECUTE MAIN PIPELINE
    # -----------------------------
    subprocess.run(['python', 'scripts/main.py'], cwd=script_dir)

    # -----------------------------
    # OPTIONAL MODULES
    # -----------------------------
    if args.generate_global_plots:
        subprocess.run(
            ['python', 'scripts/main.py', '--generate_global_plots'],
            cwd=script_dir
        )

    if args.generate_circle_plots:
        subprocess.run(
            ['python', 'scripts/main.py', '--generate_circle_plots'],
            cwd=script_dir
        )

    if args.hotspot_detection:
        subprocess.run(
            ['python', 'scripts/main.py', '--hotspot_detection'],
            cwd=script_dir
        )
