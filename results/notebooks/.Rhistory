prmd9.counts.plot <- ggplot(counts.tb) +
aes(x = species, y = counts_raw, fill = counts_red_filtered) +
geom_bar(stat = "summary", fun = "sum") +
scale_fill_futurama() +
labs(
x = "Species",
y = "Counts",
title = "PRMD9 Counts in Assemblies",
subtitle = "Colored by Reduced Counts",
fill = "Filtered Counts"
) +
coord_flip() +
theme_minimal()
prmd9.counts.plot
prmd9.counts.plot
prmd9.counts.plot <- ggplot(counts.tb) +
aes(x = species, y = counts_raw, fill = counts_red_filtered) +
geom_bar(stat = "summary", fun = "sum") +
scale_fill_gradient() +
labs(
x = "Species",
y = "Counts",
title = "PRMD9 Counts in Assemblies",
subtitle = "Colored by Reduced Counts",
fill = "Filtered Counts"
) +
coord_flip() +
theme_minimal()
prmd9.counts.plot
esquisse::esquisser()
reduced.plot <- ggplot(counts.tb) +
aes(
x = species,
y = counts_red_filtered,
fill = counts_red_filtered
) +
geom_bar(stat = "summary", fun = "sum") +
scale_fill_futurama() +
coord_flip() +
theme_minimal()
reduced.plot
reduced.plot <- ggplot(counts.tb) +
aes(
x = species,
y = counts_red_filtered,
fill = counts_red_filtered
) +
geom_bar(stat = "summary", fun = "sum") +
scale_fill_brewer("Set2") +
coord_flip() +
theme_minimal()
reduced.plot
reduced.plot <- ggplot(counts.tb) +
aes(
x = species,
y = counts_red_filtered,
fill = counts_red_filtered
) +
geom_bar(stat = "summary", fun = "sum") +
scale_fill_viridis() +
coord_flip() +
theme_minimal()
reduced.plot <- ggplot(counts.tb) +
aes(
x = species,
y = counts_red_filtered,
fill = counts_red_filtered
) +
geom_bar(stat = "summary", fun = "sum") +
scale_fill_viridis() +
coord_flip() +
theme_minimal()
reduced.plot <- ggplot(counts.tb) +
aes(
x = species,
y = counts_red_filtered,
fill = counts_red_filtered
) +
geom_bar(stat = "summary", fun = "sum") +
scale_fill_gradient() +
coord_flip() +
theme_minimal()
reduced.plot
library(arrow)
library(tidyverse)
library(esquisse)
library(ggsci)
library(ggdist)
library(esquisse)
library(plyranges)
library(GenomicRanges)
library(rtracklayer)
library(AnnotationHub)
library(Biostrings)
library(ggbio)
library(igvR)
species.table <- arrow::read_parquet(
file.path(
'F:',
'Archive',
'Trabajo',
'Profesiones',
'Bioinformatica',
'PhD',
'Assignments',
'PRMD9',
'results',
'output',
'tables',
'rpsblast.parquet'
)
)
protein.table <- arrow::read_parquet(
file.path(
'F:',
'Archive',
'Trabajo',
'Profesiones',
'Bioinformatica',
'PhD',
'Assignments',
'PRMD9',
'results',
'output',
'tables',
'ADK09900_rpsblast.parquet'
)
)
head(protein.table)
species.table
unique_species_domain <- unique(species.table[, c('Species', 'Subject ID')])
unique_species_domain
expanded_df <- merge(data.frame(species = unique(species.table$Species)),
data.frame(domain = unique(protein.table$`Subject ID`)),
all = TRUE)
expanded_df
expanded_df$presence <- ifelse(paste(expanded_df$species, expanded_df$domain) %in%
paste(unique_species_domain$Species, unique_species_domain$`Subject ID`), 1, 0)
expanded_df
ggplot(expanded_df, aes(x = species, y = domain, fill = factor(presence))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("0" = "white", "1" = "blue"),
labels = c("Absent", "Present"),
name = "Domain Presence") +
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = factor(presence))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("0" = "white", "1" = "blue"),
labels = c("Absent", "Present"),
name = "Domain Presence") +
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = factor(presence))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("0" = "white", "1" = "blue"),
labels = c("Absent", "Present"),
name = "Domain Presence") +
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = factor(presence))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("0" = "white", "1" = "blue"),
labels = c("Absent", "Present"),
name = "Domain Presence") +
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# Calculate the maximum value for each species-domain pair in the first table
species_domain_max <- species.table %>%
group_by(Species, `Subject ID`) %>%
summarize(max_value = max(YourValueColumn, na.rm = TRUE)) # Replace 'YourValueColumn' with the column containing values
# Calculate the maximum value for each species-domain pair in the first table
species_domain_max <- species.table %>%
group_by(Species, `Subject ID`) %>%
summarize(max_value = max(`Pct Identity`, na.rm = TRUE)) # Replace 'YourValueColumn' with the column containing values
species_domain_max
n
# Merge to add max_value column to expanded_df
expanded_df <- left_join(expanded_df, species_domain_max, by = c("species", "domain"))
expanded_df
# Merge to add max_value column to expanded_df
expanded_df <- left_join(expanded_df, species_domain_max, by = c("species", "domain"))
colnames(species_domain_max)
# Ensure column names align with expanded_df structure for easy joining
colnames(species_domain_max) <- c("species", "domain", "max_value")
species_domain_max
# Merge to add max_value column to expanded_df
expanded_df <- left_join(expanded_df, species_domain_max, by = c("species", "domain"))
expanded_df
ggplot(expanded_df, aes(x = species, y = domain, fill = factor(presence))) +
geom_tile(color = "white") +
scale_fill_manual(values = c("0" = "white", "1" = "blue"),
labels = c("Absent", "Present"),
name = "Domain Presence") +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 3) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_manual(values = c("0" = "white", "1" = "blue"),
labels = c("Absent", "Present"),
name = "Domain Presence") +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 3) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_viridis() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 3) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 3) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
library(arrow)
library(tidyverse)
library(esquisse)
library(ggsci)
library(ggdist)
library(esquisse)
library(plyranges)
library(GenomicRanges)
library(rtracklayer)
library(AnnotationHub)
library(Biostrings)
library(ggbio)
library(igvR)
species.table <- arrow::read_parquet(
file.path(
'F:',
'Archive',
'Trabajo',
'Profesiones',
'Bioinformatica',
'PhD',
'Assignments',
'PRMD9',
'results',
'output',
'tables',
'rpsblast.parquet'
)
)
protein.table <- arrow::read_parquet(
file.path(
'F:',
'Archive',
'Trabajo',
'Profesiones',
'Bioinformatica',
'PhD',
'Assignments',
'PRMD9',
'results',
'output',
'tables',
'ADK09900_rpsblast.parquet'
)
)
unique_species_domain <- unique(species.table[, c('Species', 'Subject ID')])
expanded_df <- merge(data.frame(species = unique(species.table$Species)),
data.frame(domain = unique(protein.table$`Subject ID`)),
all = TRUE)
# Merge to add max_value column to expanded_df
expanded_df <- left_join(expanded_df, species_domain_max, by = c("species", "domain"))
expanded_df$presence <- ifelse(paste(expanded_df$species, expanded_df$domain) %in%
paste(unique_species_domain$Species, unique_species_domain$`Subject ID`), 1, 0)
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 3) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 3) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 3) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain", size = 5) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain", size = 8, face = 'bold') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain", size = 1, face = 'bold') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 4) +  # Adjust size as needed
labs(x = "Species", y = "Domain", size = 1, face = 'bold') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain", size = 1, face = 'bold') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom", text = element_text(size = 6))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom", text = element_text(size = 20))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom", text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend = element_blank(), text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = NULL, text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = NULL, text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend = element_text(size = 5), text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.text = element_text(size = 5), text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.text = element_text(size = 5),
legend.position = 'bottom',
text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = max_value)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(max_value), round(max_value, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.text = element_text(size = 10),
legend.position = 'bottom',
text = element_text(size = 20, face = 'bold'))
# Calculate the maximum value for each species-domain pair in the first table
species_domain_max <- species.table %>%
group_by(Species, `Subject ID`) %>%
summarize(pct_identity = max(`Pct Identity`, na.rm = TRUE)) # Replace 'YourValueColumn' with the column containing values
# Ensure column names align with expanded_df structure for easy joining
colnames(species_domain_max) <- c("species", "domain", "pct_identity")
unique_species_domain <- unique(species.table[, c('Species', 'Subject ID')])
expanded_df <- merge(data.frame(species = unique(species.table$Species)),
data.frame(domain = unique(protein.table$`Subject ID`)),
all = TRUE)
# Merge to add pct_identity column to expanded_df
expanded_df <- left_join(expanded_df, species_domain_max, by = c("species", "domain"))
expanded_df$presence <- ifelse(paste(expanded_df$species, expanded_df$domain) %in%
paste(unique_species_domain$Species, unique_species_domain$`Subject ID`), 1, 0)
ggplot(expanded_df, aes(x = species, y = domain, fill = pct_identity)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(pct_identity), round(pct_identity, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.text = element_text(size = 10),
legend.position = 'bottom',
text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = pct_identity)) +
geom_tile(color = "white") +
scale_fill_gradient(color = 'green') +
geom_text(aes(label = ifelse(!is.na(pct_identity), round(pct_identity, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.text = element_text(size = 10),
legend.position = 'bottom',
text = element_text(size = 20, face = 'bold'))
ggplot(expanded_df, aes(x = species, y = domain, fill = pct_identity)) +
geom_tile(color = "white") +
scale_fill_gradient() +
geom_text(aes(label = ifelse(!is.na(pct_identity), round(pct_identity, 1), "")),
color = "black", size = 5) +  # Adjust size as needed
labs(x = "Species", y = "Domain") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.text = element_text(size = 10),
legend.position = 'bottom',
text = element_text(size = 20, face = 'bold'))
